#!/bin/sh

set -o errexit
set -o nounset

echo "SELECT CONCAT('CREATE ROLE ${POSTGRES_USER} NOSUPERUSER NOCREATEDB NOCREATEROLE NOINHERIT LOGIN PASSWORD ', '''${POSTGRES_PASSWORD}''') WHERE NOT EXISTS (SELECT rolname FROM pg_roles WHERE rolname = '${POSTGRES_USER}')\gexec" | PGPASSWORD=${POSTGRES_ROOT_PASSWORD} psql -U ${POSTGRES_ROOT} -h ${POSTGRES_SERVER_HOST}
echo "SELECT 'CREATE DATABASE ${POSTGRES_DB} WITH OWNER ${POSTGRES_USER}' WHERE NOT EXISTS (SELECT FROM pg_database WHERE datname = '${POSTGRES_DB}')\gexec" | PGPASSWORD=${POSTGRES_ROOT_PASSWORD} psql -U ${POSTGRES_ROOT} -h ${POSTGRES_SERVER_HOST}


if [ -z "${POSTGRES_USER}" ]; then
    base_postgres_image_default_user='postgres'
    export POSTGRES_USER="${base_postgres_image_default_user}"
fi
export DATABASE_URL="postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}"

postgres_ready() {
    python <<END
import sys

import psycopg2

try:
    psycopg2.connect(
        dbname="${POSTGRES_DB}",
        user="${POSTGRES_USER}",
        password="${POSTGRES_PASSWORD}",
        host="${POSTGRES_HOST}",
        port="${POSTGRES_PORT}",
    )
except psycopg2.OperationalError:
    sys.exit(-1)
sys.exit(0)

END
}
until postgres_ready; do
    echo >&2 'Waiting for PostgreSQL to become available...'
    sleep 1
done
echo >&2 'PostgreSQL is available'

exec "$@"
